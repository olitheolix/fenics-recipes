FROM continuumio/anaconda:latest
MAINTAINER Oliver Nagy <olitheolix@gmail.com>


# -------------------------------------------------------------------------
# Setup
# -------------------------------------------------------------------------
ENV HOME /root
CMD ["/bin/bash"]

# Replace the default shell with Bash.
RUN rm /bin/sh && ln -s /bin/bash /bin/sh


# -------------------------------------------------------------------------
# Basic dependencies to create Anaconda packages.
# -------------------------------------------------------------------------
RUN apt-get update && apt-get install -y \
    build-essential \
    gfortran \
    git \
    nano \
    pkg-config \
    wget
RUN conda install -y conda-build anaconda-client


# -------------------------------------------------------------------------
# Clone the FEniCS sources and FEniCS recipes.
# -------------------------------------------------------------------------
WORKDIR /tmp
RUN git clone https://bitbucket.org/fenics-project/ffc.git && \
    git clone https://bitbucket.org/fenics-project/fiat.git && \
    git clone https://bitbucket.org/fenics-project/instant.git && \
    git clone https://bitbucket.org/fenics-project/ufl.git && \
    git clone https://bitbucket.org/fenics-project/dolfin.git

# Add the recipes for the Anaconda packages.
RUN git clone https://github.com/olitheolix/fenics-recipes.git


# -------------------------------------------------------------------------
# Specify the FEniCS branch to select specific versions (eg "master" or
# "1.6.0"), as well as the version string given to the Anaconda packages.
# -------------------------------------------------------------------------
ENV FENICS_BRANCH "master"
ENV FENICS_ANACONDA_PACKAGE_VERSION '"1.7.0dev"'


# -------------------------------------------------------------------------
# Pick the correct FEniCS tag and pre-process the sources to make them
# compatible with Python 3 (ie replace some Unicode characters).
# -------------------------------------------------------------------------

# Check out the specified versions in the Git repos. Do nothing if we want
# the master branch.
RUN if [ $FENICS_BRANCH != "master" ]; then \
    cd /tmp/ffc; git checkout ffc-$FENICS_BRANCH; \
    cd /tmp/fiat; git checkout fiat-$FENICS_BRANCH; \
    cd /tmp/instant; git checkout instant-$FENICS_BRANCH; \
    cd /tmp/ufl; git checkout ufl-$FENICS_BRANCH; \
    cd /tmp/dolfin; git checkout dolfin-$FENICS_BRANCH; \
fi

# Replace problematic Unicode characters in the FEniCS sources.
RUN grep -rli 'Alnæs' * | xargs -i@ sed -i 's/Alnæs/Alnaes/g' @ && \
    grep -rli 'Vikstrøm' * | xargs -i@ sed -i 's/Vikstrøm/Vikstrom/g' @

# Set the version string in FEniCS recipes.
RUN cd /tmp/fenics-recipes && \
    sed -i -e "s/version:.*/version: $FENICS_ANACONDA_PACKAGE_VERSION/g" ffc/meta.yaml && \
    sed -i -e "s/version:.*/version: $FENICS_ANACONDA_PACKAGE_VERSION/g" fiat/meta.yaml && \
    sed -i -e "s/version:.*/version: $FENICS_ANACONDA_PACKAGE_VERSION/g" instant/meta.yaml && \
    sed -i -e "s/version:.*/version: $FENICS_ANACONDA_PACKAGE_VERSION/g" ufl/meta.yaml && \
    sed -i -e "s/version:.*/version: $FENICS_ANACONDA_PACKAGE_VERSION/g" dolfin/meta.yaml && \
    sed -i -e "s/version:.*/version: $FENICS_ANACONDA_PACKAGE_VERSION/g" fenics/meta.yaml


# -------------------------------------------------------------------------
# Install additional build dependencies; PETSc requires BLAS/LAPACK
# and Dolfin needs Scotch.
# -------------------------------------------------------------------------
RUN apt-get install -y libblas-dev liblapack-dev libptscotch-dev


# -------------------------------------------------------------------------
# Build the packages from the recipes.
# -------------------------------------------------------------------------
WORKDIR /tmp/fenics-recipes

# We build our own Eigen3 and SWIG packages because, currently, the
# default SWIG in Anaconda is too old and Eigen3 is only available via
# other channels.
RUN conda build eigen3 swig --python 2.7 --python 3.4 --no-test

# Build pre-requisite packages for FEniCS.
RUN conda build --python 2.7 --python 3.4 --no-test petsc
RUN conda build --python 2.7 --python 3.4 --no-test petsc4py
RUN conda build --python 2.7 --python 3.4 --no-test slepc
RUN conda build --python 2.7 --python 3.4 --no-test slepc4py

# Build the FEniCS packages.
RUN conda build --python 2.7 --python 3.4 --no-test instant ufl fiat ffc
RUN conda build --python 2.7 --python 3.4 --no-test dolfin

# Meta package that combines all required packages for FEniCS. This
# will also run the Poisson demo as a test to ensure the FEniCS
# tool chain works.
RUN conda build --python 2.7 --python 3.4 fenics


# -------------------------------------------------------------------------
# Print Anaconda.org upload instructions when logging into the container.
# -------------------------------------------------------------------------
CMD echo "To upload packages to Anaconda.org:" && \
    echo "  >> cd /opt/conda/conda-bld/linux-64" && \
    echo "  >> anaconda login" && \
    echo "  >> anaconda upload -i eigen3* swig* petsc* slepc* instant* ufl* fiat* ffc* dolfin* fenics*" && \
    bash
